{"version":3,"sources":["graphql/Queries.js","pages/Home.js","containers/App.js","config/Routing.js","graphql/GraphqlClient.js","containers/Root.js","index.js"],"names":["ppx_printed_query","parse","value","value$1","Js_option","Js_json","match","Js_dict","proposal","undefined","Caml_option","map","tmp","value$2","match$1","Js_exn","JSON","stringify","tmp$1","match$2","value$3","tmp$2","match$4","value$4","title","latitude","longitude","definition","graphql_ppx_use_json_variables_fn","initialViewState","zoom","pitch","bearing","lineColor","initialState","label","posX","posY","visible","make","Props","data","proposals","ApolloHooks","React","param","action","info","object","x","y","dispatch","state","tag","Belt_Array","console","log","sourcePosition","Belt_Option","targetPosition","layers","Layers","id","getColor","getWidth","onClick","Curry","pickable","React$1","controller","reuseMaps","children","ReactMapGl","mapboxApiAccessToken","process","mapStyle","viewState","style","display","left","String","position","top","url","ReasonReactRouter","path","Home$MaskManager","inMemoryCache","ApolloInMemoryCache","httpLink","ApolloLinks","instance","ReasonApollo","ReactHooks","client","GraphqlClient$MaskManager","App$MaskManager","makeContainer","container","document","createElement","body","appendChild","ReactDom","Root$MaskManager"],"mappings":"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","file":"static/js/main.332c473d.chunk.js","sourcesContent":["\n\nimport * as Js_exn from \"bs-platform/lib/es6/js_exn.js\";\nimport * as Js_dict from \"bs-platform/lib/es6/js_dict.js\";\nimport * as Js_json from \"bs-platform/lib/es6/js_json.js\";\nimport * as Js_option from \"bs-platform/lib/es6/js_option.js\";\nimport * as ApolloHooks from \"reason-apollo-hooks/src/ApolloHooks.bs.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\n\nvar ppx_printed_query = \"query GetProposalsList  {\\nproposal  {\\ntitle  \\nlatitude  \\nlongitude  \\n}\\n\\n}\\n\";\n\nfunction parse(value) {\n  var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n  var match = Js_dict.get(value$1, \"proposal\");\n  return {\n          proposal: match !== undefined ? Js_option.getExn(Js_json.decodeArray(Caml_option.valFromOption(match))).map((function (value) {\n                    var value$1 = Js_option.getExn(Js_json.decodeObject(value));\n                    var match = Js_dict.get(value$1, \"title\");\n                    var tmp;\n                    if (match !== undefined) {\n                      var value$2 = Caml_option.valFromOption(match);\n                      var match$1 = Js_json.decodeString(value$2);\n                      tmp = match$1 !== undefined ? match$1 : Js_exn.raiseError(\"graphql_ppx: Expected string, got \" + JSON.stringify(value$2));\n                    } else {\n                      tmp = Js_exn.raiseError(\"graphql_ppx: Field title on type proposal is missing\");\n                    }\n                    var match$2 = Js_dict.get(value$1, \"latitude\");\n                    var tmp$1;\n                    if (match$2 !== undefined) {\n                      var value$3 = Caml_option.valFromOption(match$2);\n                      var match$3 = Js_json.decodeNull(value$3);\n                      tmp$1 = match$3 !== undefined ? undefined : Caml_option.some(value$3);\n                    } else {\n                      tmp$1 = undefined;\n                    }\n                    var match$4 = Js_dict.get(value$1, \"longitude\");\n                    var tmp$2;\n                    if (match$4 !== undefined) {\n                      var value$4 = Caml_option.valFromOption(match$4);\n                      var match$5 = Js_json.decodeNull(value$4);\n                      tmp$2 = match$5 !== undefined ? undefined : Caml_option.some(value$4);\n                    } else {\n                      tmp$2 = undefined;\n                    }\n                    return {\n                            title: tmp,\n                            latitude: tmp$1,\n                            longitude: tmp$2\n                          };\n                  })) : Js_exn.raiseError(\"graphql_ppx: Field proposal on type query_root is missing\")\n        };\n}\n\nfunction make(param) {\n  return {\n          query: ppx_printed_query,\n          variables: null,\n          parse: parse\n        };\n}\n\nfunction makeWithVariables(param) {\n  return {\n          query: ppx_printed_query,\n          variables: null,\n          parse: parse\n        };\n}\n\nfunction makeVariables(param) {\n  return null;\n}\n\nfunction definition_002(graphql_ppx_use_json_variables_fn) {\n  return 0;\n}\n\nvar definition = /* tuple */[\n  parse,\n  ppx_printed_query,\n  definition_002\n];\n\nfunction ret_type(f) {\n  return { };\n}\n\nvar MT_Ret = { };\n\nvar GetProposalsListQuery = {\n  ppx_printed_query: ppx_printed_query,\n  query: ppx_printed_query,\n  parse: parse,\n  make: make,\n  makeWithVariables: makeWithVariables,\n  makeVariables: makeVariables,\n  definition: definition,\n  ret_type: ret_type,\n  MT_Ret: MT_Ret\n};\n\nfunction useProposalsListQuery(param) {\n  return ApolloHooks.useQuery(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, definition);\n}\n\nexport {\n  GetProposalsListQuery ,\n  useProposalsListQuery ,\n  \n}\n/* ApolloHooks Not a pure module */\n","\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Js_json from \"bs-platform/lib/es6/js_json.js\";\nimport * as Belt_Array from \"bs-platform/lib/es6/belt_Array.js\";\nimport * as Belt_Option from \"bs-platform/lib/es6/belt_Option.js\";\nimport * as Caml_option from \"bs-platform/lib/es6/caml_option.js\";\nimport * as ReactMapGl from \"react-map-gl\";\nimport * as React$1 from \"@deck.gl/react\";\nimport * as Layers from \"@deck.gl/layers\";\nimport * as Queries$MaskManager from \"../graphql/Queries.js\";\n\nvar initialViewState = {\n  longitude: 1.091269,\n  latitude: 49.443268,\n  zoom: 13,\n  pitch: 0,\n  bearing: 0\n};\n\nvar layerLineId = \"layer-id\";\n\nvar lineColor = /* tuple */[\n  255,\n  0,\n  0\n];\n\nvar initialState = {\n  label: \"default\",\n  posX: 0,\n  posY: 0,\n  visible: false\n};\n\nfunction visibleToDisplay(visible) {\n  if (visible) {\n    return \"block\";\n  } else {\n    return \"none\";\n  }\n}\n\nfunction Home(Props) {\n  var match = Queries$MaskManager.useProposalsListQuery(/* () */0);\n  var proposals = match[0];\n  var match$1 = React.useReducer((function (param, action) {\n          var info = action[0];\n          return {\n                  label: info.object.label,\n                  posX: info.x,\n                  posY: info.y,\n                  visible: true\n                };\n        }), initialState);\n  var dispatch = match$1[1];\n  var state = match$1[0];\n  var renderTooltip = function (param) {\n    return React.createElement(\"div\", {\n                style: {\n                  display: state.visible ? \"block\" : \"none\",\n                  left: String(state.posX) + \"px\",\n                  position: \"absolute\",\n                  top: String(state.posY) + \"px\"\n                }\n              }, state.label);\n  };\n  var data;\n  data = typeof proposals === \"number\" ? [] : (\n      proposals.tag ? [] : Belt_Array.map(proposals[0].proposal, (function (proposal) {\n                var match = proposal.latitude;\n                var match$1 = proposal.longitude;\n                if (match !== undefined) {\n                  if (match$1 !== undefined) {\n                    var longitude = Caml_option.valFromOption(match$1);\n                    var latitude = Caml_option.valFromOption(match);\n                    console.log(latitude, longitude);\n                    return {\n                            label: proposal.title,\n                            sourcePosition: /* tuple */[\n                              Belt_Option.getWithDefault(Js_json.decodeNumber(longitude), 0),\n                              Belt_Option.getWithDefault(Js_json.decodeNumber(latitude), 0)\n                            ],\n                            targetPosition: /* tuple */[\n                              0,\n                              0\n                            ]\n                          };\n                  } else {\n                    return {\n                            label: \"\",\n                            sourcePosition: /* tuple */[\n                              0,\n                              0\n                            ],\n                            targetPosition: /* tuple */[\n                              0,\n                              0\n                            ]\n                          };\n                  }\n                } else {\n                  return {\n                          label: \"\",\n                          sourcePosition: /* tuple */[\n                            0,\n                            0\n                          ],\n                          targetPosition: /* tuple */[\n                            0,\n                            0\n                          ]\n                        };\n                }\n              }))\n    );\n  console.log(data);\n  var layers = [new Layers.LineLayer({\n          id: layerLineId,\n          data: data,\n          getColor: lineColor,\n          getWidth: 3,\n          onClick: (function (info) {\n              return Curry._1(dispatch, /* Click */[info]);\n            }),\n          pickable: true\n        })];\n  return React.createElement(React$1.default, {\n              initialViewState: initialViewState,\n              controller: true,\n              reuseMaps: true,\n              layers: layers,\n              children: null\n            }, React.createElement(ReactMapGl.StaticMap, {\n                  mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n                  mapStyle: \"mapbox://styles/mapbox/dark-v10\",\n                  viewState: initialViewState\n                }), renderTooltip(/* () */0));\n}\n\nvar lineWidth = 3;\n\nvar make = Home;\n\nexport {\n  initialViewState ,\n  layerLineId ,\n  lineColor ,\n  lineWidth ,\n  initialState ,\n  visibleToDisplay ,\n  make ,\n  \n}\n/* react Not a pure module */\n","\n\nimport * as React from \"react\";\nimport * as Home$MaskManager from \"../pages/Home.js\";\nimport * as ReasonReactRouter from \"reason-react/src/ReasonReactRouter.js\";\nimport * as Routing$MaskManager from \"../config/Routing.js\";\n\nfunction App(Props) {\n  var route = Routing$MaskManager.getRouteFromUrl(ReasonReactRouter.useUrl(undefined, /* () */0).path);\n  if (route) {\n    return \"Not found\";\n  } else {\n    return React.createElement(Home$MaskManager.make, { });\n  }\n}\n\nvar make = App;\n\nexport {\n  make ,\n  \n}\n/* react Not a pure module */\n","\n\nimport * as ReasonReactRouter from \"reason-react/src/ReasonReactRouter.js\";\n\nfunction getRoutePath(route) {\n  if (route) {\n    return \"/404\";\n  } else {\n    return \"/\";\n  }\n}\n\nfunction getRouteFromUrl(url) {\n  if (url && !(url[1] || url[0] !== process.env.REACT_APP_PATH)) {\n    return /* Home */0;\n  } else {\n    return /* NotFound */1;\n  }\n}\n\nfunction push(route) {\n  return ReasonReactRouter.push(route ? \"/404\" : \"/\");\n}\n\nexport {\n  getRoutePath ,\n  getRouteFromUrl ,\n  push ,\n  \n}\n/* ReasonReactRouter Not a pure module */\n","\n\nimport * as ApolloLinks from \"reason-apollo/src/ApolloLinks.bs.js\";\nimport * as ReasonApollo from \"reason-apollo/src/ReasonApollo.bs.js\";\nimport * as ApolloInMemoryCache from \"reason-apollo/src/ApolloInMemoryCache.bs.js\";\n\nvar inMemoryCache = ApolloInMemoryCache.createInMemoryCache(undefined, undefined, /* () */0);\n\nvar httpLink = ApolloLinks.createHttpLink(\"http://postcovidurbanism.eastus.azurecontainer.io/v1/graphql\", undefined, undefined, undefined, undefined, undefined, /* () */0);\n\nvar instance = ReasonApollo.createApolloClient(httpLink, inMemoryCache, undefined, undefined, undefined, undefined, /* () */0);\n\nexport {\n  inMemoryCache ,\n  httpLink ,\n  instance ,\n  \n}\n/* inMemoryCache Not a pure module */\n","\n\nimport * as React from \"react\";\nimport * as App$MaskManager from \"./App.js\";\nimport * as ReactHooks from \"@apollo/react-hooks\";\nimport * as GraphqlClient$MaskManager from \"../graphql/GraphqlClient.js\";\n\nfunction Root(Props) {\n  return React.createElement(ReactHooks.ApolloProvider, {\n              client: GraphqlClient$MaskManager.instance,\n              children: React.createElement(App$MaskManager.make, { })\n            });\n}\n\nvar make = Root;\n\nexport {\n  make ,\n  \n}\n/* react Not a pure module */\n","\n\nimport * as React from \"react\";\nimport * as ReactDom from \"react-dom\";\nimport * as Root$MaskManager from \"./containers/Root.js\";\n\nfunction makeContainer(param) {\n  var container = document.createElement(\"div\");\n  document.body.appendChild(container);\n  return container;\n}\n\nReactDom.render(React.createElement(Root$MaskManager.make, { }), makeContainer(/* () */0));\n\nexport {\n  makeContainer ,\n  \n}\n/*  Not a pure module */\n"],"sourceRoot":""}